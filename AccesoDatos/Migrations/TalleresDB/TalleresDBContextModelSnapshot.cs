// <auto-generated />
using System;
using AccesoDatos.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesoDatos.Migrations.TalleresDB
{
    [DbContext(typeof(TalleresDBContext))]
    partial class TalleresDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdOwner")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId")
                        .HasName("PK_Company_Id")
                        .HasAnnotation("SqlServer:Identity", "1,1");

                    b.HasIndex("IdOwner");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("Entidades.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("Decimal(6,2)");

                    b.HasKey("EmployeeId")
                        .HasName("PK_Employee_Id")
                        .HasAnnotation("SqlServer:Identity", "1,1");

                    b.HasIndex("OwnerId");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("Entidades.Owner", b =>
                {
                    b.Property<int>("IdOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_owner");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOwner"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Celular")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Correo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdOwner")
                        .HasName("PK_id_owner")
                        .HasAnnotation("SqlServer:Identity", "1,1");

                    b.ToTable("owner", (string)null);
                });

            modelBuilder.Entity("Entidades.Company", b =>
                {
                    b.HasOne("Entidades.Owner", "OwnerNavigation")
                        .WithMany("Companys")
                        .HasForeignKey("IdOwner")
                        .HasConstraintName("FK_Owner_Id");

                    b.Navigation("OwnerNavigation");
                });

            modelBuilder.Entity("Entidades.Employee", b =>
                {
                    b.HasOne("Entidades.Owner", "OwnerNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_ID");

                    b.Navigation("OwnerNavigation");
                });

            modelBuilder.Entity("Entidades.Owner", b =>
                {
                    b.Navigation("Companys");

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
